##Java
import java.util.HashMap;
import java.util.Map;

public class TwoSum {
    public static int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            if (map.containsKey(complement)) {
                return new int[] { map.get(complement), i };
            }
            map.put(nums[i], i);
        }
        throw new IllegalArgumentException("No two sum solution");
    }

    public static void main(String[] args) {
        int[] nums = {3, 1, 4, 2, 5, 7, 6}; //numbers
        int target = 8; //target
        int[] indices = twoSum(nums, target);
        System.out.println("Indices of the two numbers are: " + indices[0] + " and " + indices[1]);
    }
}

// Output 
Indices of the two numbers are: 0 and 4


##python
def two_sum(nums, target):
    # Create a dictionary to store number and its index
    map = {}
    for i, num in enumerate(nums):
        complement = target - num
        if complement in map:
            return [map[complement], i]
        map[num] = i
    # If no solution is found, raise an exception
    raise ValueError("No two sum solution")

# Example usage
if __name__ == "__main__":
    nums = [3, 1, 4, 2, 5, 7, 6]  # numbers
    target = 8  # target
    indices = two_sum(nums, target)
    print("Indices of the two numbers are:", indices[0], "and", indices[1])

# Output 
Indices of the two numbers are: 0 and 4
