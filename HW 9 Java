import java.util.Scanner;

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode(int x) { val = x; }
}

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        while (root != null) {
            if (root.val > p.val && root.val > q.val) {
                root = root.left;
            } else if (root.val < p.val && root.val < q.val) {
                root = root.right;
            } else {
                return root;
            }
        }
        return null;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Construct the BST
        TreeNode root = new TreeNode(4);
        root.left = new TreeNode(3);
        root.left.left = new TreeNode(1);
        root.right = new TreeNode(8);
        root.right.left = new TreeNode(5);
        root.right.right = new TreeNode(9);

        System.out.println("Enter the value for node p:");
        int pValue = scanner.nextInt();

        System.out.println("Enter the value for node q:");
        int qValue = scanner.nextInt();

        // Find the LCA of nodes p and q
        TreeNode p = new TreeNode(pValue);
        TreeNode q = new TreeNode(qValue);
        TreeNode lca = new Solution().lowestCommonAncestor(root, p, q);

        System.out.println("LCA of " + pValue + " and " + qValue + ": " + (lca != null ? lca.val : "None"));

        scanner.close();
    }
}
